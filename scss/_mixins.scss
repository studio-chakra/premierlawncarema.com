//
// Mixins
// --------------------------------------------------

@mixin vertical-align {
  display: inline-block;
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}


@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}


@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}


@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}





@function get-font-weight($weight, $font) {
  @if $font == "magneta" {
    @if map-has-key($ff-magneta-weights, $weight) {
      @return map-get($ff-magneta-weights, $weight);
    } 
  } @elseif $font == "akagi" {
    @if map-has-key($ff-akagi-weights, $weight) {
      @return map-get($ff-akagi-weights, $weight);
    } 
  }
  @warn "Unknown `#{$weight}` in $weights.";
  @return null;
}

@mixin font-style ($family, $weight: null, $style: null, $color: null, $transform: null) {
  @if $family {
    @if $family == "magneta" {
      font-family: $font-magneta;
    } @elseif $family == "akagi" {
      font-family: $font-akagi;
    }
  }  
  @if $weight {
    font-weight: get-font-weight($weight, $family);
  }
  @if $style {
    font-style: $style;
  }
  @if $color {
    color: $color;
  }
  @if $transform {
    text-transform: $transform;
  }
}

@mixin font-weight ($family, $weight) {
  font-weight: get-font-weight($weight, $family);
}
